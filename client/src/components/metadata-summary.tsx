import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { TikTokData } from "@/pages/home";
import { FileText, Copy, Share2 } from "lucide-react";
import { copyToClipboard } from "@/lib/clipboard";
import { toast } from "@/hooks/use-toast";
import { useState } from "react";

interface MetadataSummaryProps {
  data: TikTokData;
}

export function MetadataSummary({ data }: MetadataSummaryProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  const generateSummary = () => {
    return `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë       TIKTOK VIDEO METADATA             ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üì± GENERAL INFORMATION
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
Title: ${data.title}
Description: ${data.description}
Video ID: ${data.videoId}
Type: ${data.contentType.toUpperCase()}
Upload Date: ${data.uploadDate}

üë§ CREATOR
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
Username: @${data.creator.username}
Display Name: ${data.creator.nickname}
Verified: ${data.creator.verified ? '‚úì Yes' : '‚úó No'}

üìä STATISTICS
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üëÅ Views: ${data.stats.views.toLocaleString()}
‚ù§ Likes: ${data.stats.likes.toLocaleString()}
üí¨ Comments: ${data.stats.comments.toLocaleString()}
üîÑ Shares: ${data.stats.shares.toLocaleString()}
‚≠ê Favorites: ${data.stats.favorites.toLocaleString()}

üéµ AUDIO
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
Track: ${data.audio.title}
Artist: ${data.audio.author}

üé¨ TECHNICAL DETAILS
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
Duration: ${data.metadata.duration}
Resolution: ${data.metadata.resolution}
Format: ${data.metadata.format}
Video Codec: ${data.metadata.codec}
Audio Codec: ${data.metadata.audioCodec}
FPS: ${data.metadata.fps}
Bitrate: ${data.metadata.bitrate}
Video Size: ${data.metadata.videoSize}
Audio Size: ${data.metadata.audioSize}
Channels: ${data.metadata.audioChannels}
Sample Rate: ${data.metadata.audioSampleRate}

${data.hashtags.length > 0 ? `üè∑ HASHTAGS
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
${data.hashtags.map(tag => `#${tag}`).join(' ')}` : ''}

üîó URL
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
https://www.tiktok.com/@${data.creator.username}/video/${data.videoId}

Generated by TikTok Downloader
    `.trim();
  };

  const shareData = async () => {
    const shareText = `Check out this TikTok video by @${data.creator.username}!\n\n"${data.title}"\n\nüëÅ ${data.stats.views.toLocaleString()} views | ‚ù§ ${data.stats.likes.toLocaleString()} likes\n\nhttps://www.tiktok.com/@${data.creator.username}/video/${data.videoId}`;
    
    if (navigator.share) {
      try {
        await navigator.share({
          title: data.title,
          text: shareText,
          url: `https://www.tiktok.com/@${data.creator.username}/video/${data.videoId}`,
        });
        toast({
          title: "Shared!",
          description: "Video shared successfully",
        });
      } catch (error) {
        if (error instanceof Error && error.name !== 'AbortError') {
          copyToClipboard(shareText, "Share text");
        }
      }
    } else {
      copyToClipboard(shareText, "Share text");
    }
  };

  return (
    <Card className="cyber-card fade-in-up" data-testid="card-metadata-summary">
      <CardHeader>
        <div className="flex items-center justify-between">
          <CardTitle className="text-lg font-bold text-cyan-300 flex items-center gap-2">
            <FileText className="h-5 w-5" />
            Full Metadata Summary
          </CardTitle>
          <div className="flex items-center gap-2">
            <Button
              onClick={shareData}
              variant="outline"
              size="sm"
              className="cyber-button h-9 text-xs"
              data-testid="button-share-metadata"
            >
              <Share2 className="h-3 w-3 mr-1" />
              Share
            </Button>
            <Button
              onClick={() => copyToClipboard(generateSummary(), "Full metadata")}
              variant="outline"
              size="sm"
              className="cyber-button h-9 text-xs"
              data-testid="button-copy-summary"
            >
              <Copy className="h-3 w-3 mr-1" />
              Copy
            </Button>
            <Button
              onClick={() => setIsExpanded(!isExpanded)}
              variant="outline"
              size="sm"
              className="cyber-button h-9 text-xs"
              data-testid="button-toggle-summary"
            >
              {isExpanded ? 'Hide' : 'Show'}
            </Button>
          </div>
        </div>
      </CardHeader>
      {isExpanded && (
        <CardContent>
          <pre className="bg-black/40 p-4 rounded-lg border border-cyan-500/30 text-cyan-300 text-xs overflow-x-auto font-mono leading-relaxed">
            {generateSummary()}
          </pre>
        </CardContent>
      )}
    </Card>
  );
}
